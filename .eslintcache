[{"C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\index.js":"1","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\App.js":"2","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\reportWebVitals.js":"3","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\FormikDemo.js":"4","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\FormikContextDemo.js":"5","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\components\\FormPartial.js":"6","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\forms\\NormalForm.jsx":"7"},{"size":730,"mtime":1613814296238,"results":"8","hashOfConfig":"9"},{"size":728,"mtime":1613816621379,"results":"10","hashOfConfig":"9"},{"size":356,"mtime":1613814022944,"results":"11","hashOfConfig":"9"},{"size":2205,"mtime":1613814022891,"results":"12","hashOfConfig":"9"},{"size":1055,"mtime":1613814022860,"results":"13","hashOfConfig":"9"},{"size":1059,"mtime":1613814022832,"results":"14","hashOfConfig":"9"},{"size":2938,"mtime":1613816528872,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ib9boo",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\index.js",[],["34","35"],"C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\App.js",[],"C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\FormikDemo.js",["36"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\n\r\nconst FormDemo = () => {\r\n  const initialValues = {\r\n    email: \"test@test.com\",\r\n    password: \"Test123\",\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n    }, 400);\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validate}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          isValid,\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form className=\"form\">\r\n            {/* <form onSubmit={handleSubmit}> */}\r\n\r\n            <pre>{JSON.stringify(values)}</pre>\r\n            <pre>{JSON.stringify(errors)}</pre>\r\n            <div>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" className=\"mt-2\" />\r\n              {/* {errors.email && touched.email && errors.email} */}\r\n              <div className=\"error\">\r\n                <ErrorMessage name=\"email\" />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field type=\"password\" name=\"password\" className=\"mt-2\"></Field>\r\n              {/* {errors.password && touched.password && errors.password} */}\r\n              <div className=\"error\">\r\n                <ErrorMessage name=\"password\" />\r\n              </div>\r\n            </div>\r\n            <button\r\n              class=\"mt-2\"\r\n              type=\"submit\"\r\n              disabled={isSubmitting && !isValid}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDemo;\r\n","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\FormikContextDemo.js",["37","38","39"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport FormPartial from \"./components/FormPartial\";\r\n\r\nconst FormDemo = () => {\r\n  const initialValues = {\r\n    email: \"test@test.com\",\r\n    password: \"Test123\",\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const onSubmit = (values, { setSubmitting }) => {\r\n    setTimeout(() => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n    }, 400);\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validate}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <Form className=\"form\">\r\n          <FormPartial></FormPartial>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDemo;\r\n","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\components\\FormPartial.js",["40"],"import { useFormikContext, ErrorMessage, Field } from \"formik\";\r\n\r\nconst FormPartial = () => {\r\n  const {\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    isSubmitting,\r\n    isValid,\r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <>\r\n      <pre>{JSON.stringify(values)}</pre>\r\n      <pre>{JSON.stringify(errors)}</pre>\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <sc-input type=\"email\" name=\"email\" className=\"mt-2\"></sc-input>\r\n        {/* {errors.email && touched.email && errors.email} */}\r\n        <div className=\"error\">\r\n          <ErrorMessage name=\"email\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field type=\"password\" name=\"password\" className=\"mt-2\"></Field>\r\n        {/* {errors.password && touched.password && errors.password} */}\r\n        <div className=\"error\">\r\n          <ErrorMessage name=\"password\" />\r\n        </div>\r\n      </div>\r\n      <button class=\"mt-2\" type=\"submit\" disabled={isSubmitting && !isValid}>\r\n        Submit\r\n      </button>\r\n    </>\r\n  );\r\n};\r\nexport default FormPartial;\r\n","C:\\Users\\Sean\\Documents\\CanberraJS\\FormikYup\\app\\src\\forms\\NormalForm.jsx",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"45","severity":1,"message":"49","line":2,"column":24,"nodeType":"47","messageId":"48","endLine":2,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":2,"column":31,"nodeType":"47","messageId":"48","endLine":2,"endColumn":43},{"ruleId":"45","severity":1,"message":"51","line":7,"column":5,"nodeType":"47","messageId":"48","endLine":7,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]